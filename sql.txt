
CREATE TABLE MediaItems 
(
	MID NUMBER(9,0) NOT NULL,
	TITLE VARCHAR2 (200),
	PROD_YEAR NUMBER(4),
	TITLE_LENGTH NUMBER(4),
	CONSTRAINT MediaItems_PK PRIMARY KEY(MID)
);

----## 1.1.2 ##
CREATE TABLE Similarity 
(
	MID1 NUMBER(9,0) NOT NULL,
	MID2 NUMBER(9,0) NOT NULL,
	SIMILARITY FLOAT,
	CONSTRAINT Similarity_PK PRIMARY KEY
	(MID1,MID2),    
	CONSTRAINT FK_MID1MID FOREIGN KEY (MID1) REFERENCES MediaItems(MID),
	CONSTRAINT FK_MID2MID FOREIGN KEY (MID2) REFERENCES MediaItems(MID)
);
--
----## 1.1.3 ##
CREATE or REPLACE TRIGGER AutoIncrement
BEFORE INSERT
on MediaItems for EACH ROW
DECLARE
	ID_COUNTER NUMBER;
BEGIN
    :new.TITLE_LENGTH:=LENGTH(:new.TITLE);
	SELECT MAX(MediaItems.MID) INTO ID_COUNTER FROM MediaItems;
	IF ID_COUNTER IS NULL THEN
	 :new.MID:=0;
	ELSE
	 :new.MID:=ID_COUNTER+1;
	END IF;
END;


----###1.1.4###

CREATE OR REPLACE FUNCTION MaximalDistance RETURN NUMBER IS
	minProdYear NUMBER;
	maxProdYear NUMBER;
BEGIN
	SELECT MIN(PROD_YEAR) INTO minProdYear FROM MediaItems;
	SELECT MAX(PROD_YEAR) INTO maxProdYear FROM MediaItems;
	RETURN power(maxProdYear-minProdYear,2);
END MaximalDistance;


----###1.1.5###

create or replace FUNCTION SimCalculation (MID1 NUMBER, MID2 NUMBER, maximal_distance NUMBER) RETURN FLOAT IS
	firstYear NUMBER;
	secYear NUMBER;
    ans FLOAT;
BEGIN
	SELECT PROD_YEAR INTO firstYear FROM MediaItems WHERE MID=MID1;
	SELECT PROD_YEAR INTO secYear FROM MediaItems WHERE MID=MID2;
	ans := power(firstYear-secYear,2);
	RETURN (1-(ans/maximal_distance));
END SimCalculation;